{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/GitGrid.js","services/giphy.api.js","GiftExpertApp.js","hooks/useFetchGifs.js","index.js"],"names":["AddCategory","value","onChange","type","event","target","GitGridItem","gif","className","src","url","alt","title","GitGrid","gifs","loading","map","i","id","getGifs","category","a","encodeURI","fetch","resp","json","data","img","images","downsized_medium","GiftExpertApp","useState","search","setSearch","setLoading","setGifs","useEffect","fetchGifs","newGifts","onSubmitForm","e","preventDefault","onChangeSearchText","useFetchGifs","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"6LAwBeA,EArBb,SAAC,GAGM,IAFLC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,mCACE,uBACEC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAWF,EAASE,EAAMC,OAAOJ,aCHtCK,EATM,SAAC,GAAY,IAAVC,EAAS,EAATA,IACtB,OACE,sBAAKC,UAAU,yCAAf,UACA,qBAAKC,IAAMF,EAAIG,IAAMC,IAAMJ,EAAIK,QAC/B,kCAAML,EAAIK,MAAV,WCeWC,EAjBC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvB,OACE,qCACGA,GAAW,mBAAGP,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEIM,EAAKE,KAAI,SAACT,EAAKU,GAAN,OACP,cAAC,EAAD,CAAoCV,IAAKA,GAAzC,UAAqBA,EAAIW,GAAzB,YAA+BD,a,8BCT9BE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,+FAEfX,EAFe,iDAEkCY,UAAWF,GAF7C,0EAGFG,MAAOb,GAHL,cAGfc,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFZ,EAAOY,EAAKV,KAAK,SAAAW,GAAQ,IAAD,EAC1B,MAAO,CACHT,GAAIS,EAAIT,GACRN,MAAOe,EAAIf,MACXF,IAAG,UAAEiB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBnB,QAVrB,kBAcdI,GAdc,4CAAH,sDC8BLgB,EA1BO,WAAO,IAAD,ECEA,WAAO,IAAD,EAGNC,mBAAS,IAHH,mBAG3BC,EAH2B,KAGnBC,EAHmB,OAIJF,oBAAS,GAJL,mBAI3BhB,EAJ2B,KAIlBmB,EAJkB,OAKVH,mBAAS,IALC,mBAK3BjB,EAL2B,KAKrBqB,EALqB,KAQhCC,qBAAU,WACRC,EAAU,aACT,IAEH,IAAMA,EAAS,uCAAI,WAAOpC,GAAP,eAAAoB,EAAA,6DACjBa,GAAW,GADM,SAEMf,EAASlB,GAFf,OAEbqC,EAFa,OAGjBJ,GAAW,GACXC,EAASG,GAJQ,2CAAJ,sDAef,MAAO,CACLN,SACAlB,OACAC,UACAwB,aAZgB,uCAAG,WAAOC,GAAP,SAAAnB,EAAA,sDACnBmB,EAAEC,iBACFJ,EAAUL,GAFS,2CAAH,sDAahBU,mBATyB,SAACzC,GAC1BgC,EAAUhC,KDlBR0C,GALFJ,EAHwB,EAGxBA,aACAG,EAJwB,EAIxBA,mBACAV,EALwB,EAKxBA,OACAlB,EANwB,EAMxBA,KACAC,EAPwB,EAOxBA,QAIF,OACE,qCACE,+CACA,sBAAM6B,SAAUL,EAAhB,SACE,cAAC,EAAD,CACEtC,MAAO+B,EACP9B,SAAUwC,MAGd,cAAC,EAAD,CAAS5B,KAASA,EAAMC,QAAWA,IACnC,2BEnBN8B,IAASC,OAAQ,cAAC,EAAD,IAAoBC,SAASC,eAAe,W","file":"static/js/main.1a78ade7.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory =\r\n  ({\r\n    value,\r\n    onChange,\r\n  }) => {\r\n    return (\r\n      < >\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(event) => onChange(event.target.value)}\r\n        />\r\n        {/*onKeyPress={(event)=> event.key === \"Enter\" ? onPressEnter(event.target.value): null } */}\r\n      </ >\r\n    )\r\n  }\r\n\r\nAddCategory.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func\r\n}\r\n\r\nexport default AddCategory","const GitGridItem =  ({ gif })=> {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n    <img src={ gif.url } alt={ gif.title } />\r\n    <p> { gif.title } </p>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default GitGridItem","\r\nimport GitGridItem from \"./GifGridItem\"\r\nconst GitGrid = ({ gifs, loading }) => {\r\n  return (\r\n    <>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {\r\n          gifs.map((gif, i) => (\r\n            <GitGridItem key={`${gif.id}-${i}`} gif={gif} />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default GitGrid","export const getGifs = async( category ) => {\r\n  const api_key = `QOFlzMO43wJOZZSst7eBoPiRX55Msajg`\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=${api_key}`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n      return {\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n      }\r\n  })\r\n\r\n  return gifs;\r\n\r\n\r\n}","\r\nimport AddCategory from \"./components/AddCategory\"\r\nimport GitGrid from \"./components/GitGrid\"\r\nimport { useFetchGifs  }  from './hooks/useFetchGifs'\r\nconst GiftExpertApp = () => {\r\n\r\n  let { \r\n    onSubmitForm,\r\n    onChangeSearchText,\r\n    search , \r\n    gifs, \r\n    loading, \r\n  } = useFetchGifs()\r\n \r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <form onSubmit={onSubmitForm}>\r\n        <AddCategory\r\n          value={search}\r\n          onChange={onChangeSearchText}\r\n        />\r\n      </form>\r\n      <GitGrid gifs = { gifs} loading= { loading } /> \r\n      <hr />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GiftExpertApp","\r\n\r\nimport {useEffect, useState } from 'react'\r\n\r\nimport {getGifs  }  from '../services/giphy.api'\r\n\r\nexport const useFetchGifs = ( ) =>{\r\n\r\n\r\n  let [search, setSearch] = useState('')\r\n  let [loading, setLoading] = useState(false)\r\n  let [gifs, setGifs] = useState([ ])\r\n\r\n\r\n  useEffect(() => {\r\n    fetchGifs('Saitama')\r\n  }, [])\r\n  \r\n  const fetchGifs =  async (value) => {\r\n    setLoading(true)\r\n    let newGifts  =  await getGifs( value)\r\n    setLoading(false)\r\n    setGifs (newGifts)\r\n  }\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    fetchGifs(search)\r\n  }\r\n  const onChangeSearchText = (value)=> {\r\n    setSearch(value)\r\n  }\r\n\r\n  return {\r\n    search,\r\n    gifs, \r\n    loading,\r\n    onSubmitForm,\r\n    onChangeSearchText\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  GiftExpertApp from './GiftExpertApp'\n \n\nReactDOM.render( <GiftExpertApp /> , document.getElementById('root'));\n\n \n"],"sourceRoot":""}